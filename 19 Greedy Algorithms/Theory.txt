Greedy Algorithm - Revision Notes

Definition:
A Greedy Algorithm is an approach for solving optimization problems by making the locally optimal 
choice at each step with the hope of finding a global optimum.

Key Idea:
- Builds solution step by step choosing the most beneficial option at each stage.
- Never reconsiders previous choices once made.

Steps in a Greedy Algorithm:
1. Identify the set of candidates (possible options).
2. Select the best candidate according to the criterion.
3. Check if the choice keeps the solution feasible.
4. Repeat until the final solution is achieved.

Properties:
- Greedy Choice Property: Local optimum choice leads to global optimum.
- Optimal Substructure: Optimal solution contains optimal sub-solutions.

Examples:
1. Fractional Knapsack Problem
2. Activity Selection Problem
3. Huffman Coding
4. Kruskal’s Algorithm (MST)
5. Prim’s Algorithm (MST)
6. Dijkstra’s Algorithm (Shortest Path)

Advantages:
- Easy to implement and understand.
- Fast and efficient for many problems.

Disadvantages:
- May not always produce global optimum.
- Works only for problems satisfying greedy properties.

Time Complexity: Usually O(n) to O(n log n)
Space Complexity: O(1) to O(n)
