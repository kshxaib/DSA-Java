Binary Trees - Notes for Revision

1. Definition and Structure:
A Binary Tree is a hierarchical data structure in which each node has at most two children 
â€” referred to as the left child and the right child.
Each node contains three parts:
   - Data or Value
   - Pointer to the left child
   - Pointer to the right child

The topmost node of the tree is called the "root node". Every child node can itself be a subtree.

2. Levels and Sublevels:
The level of a node represents its position within the tree structure. 
- The root node is at Level 1.
- Its immediate children are at Level 2.
- Their children are at Level 3, and so on.

Each level can have up to 2^n nodes, where n is the level number (starting from 1).

3. Depth of a Level:
The depth of a node refers to its level number in the tree.
Hence,
- The root has a depth of 1.
- Nodes directly below it have depth 2, and so on.

The height of a binary tree is the maximum depth of any node (i.e., the number of levels).
A greater height indicates a more skewed tree, while a smaller height indicates a balanced tree.

4. Leaf Node:
A leaf node is a node that has no left or right child. It is the endpoint of a branch in the binary tree.
Leaf nodes are important in traversal, counting operations, and in determining the height or completeness of the tree.
