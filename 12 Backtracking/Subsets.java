// Problem: Generate All Subsets of a String using Recursion
/*
ðŸ“Œ Problem Statement:
Given a string, generate all possible subsets (the power set) using recursion.

ðŸ‘‰ Key Idea (Inclusion/Exclusion with Backtracking):
   - At each character, we have 2 choices:
     1. Include the current character in the subset.
     2. Exclude the current character.
   - Continue this process for every character â†’ gives all subsets.
*/

public class Subsets {

    /*
     * Recursive function to generate subsets.
     * str   â†’ Original string
     * ans   â†’ Current subset being built
     * index â†’ Current index in string
     */
    public static void findSubsets(String str, String ans, int index){
        // Base case: If we reach the end of the string â†’ print current subset
        if(index == str.length()){
            System.out.println(ans);
            return;
        }

        // âœ… Choice 1: Include current character in subset
        findSubsets(str, ans + str.charAt(index), index + 1);

        // âœ… Choice 2: Exclude current character from subset
        findSubsets(str, ans, index + 1);
    }

    public static void main(String[] args) {
        String str = "abc";
        String ans = "";
        findSubsets(str, ans, 0);  // Start recursion from index=0
    }
}

/*
ðŸ“Œ Dry Run for str = "abc":

At index=0 â†’ char='a'
   - Include 'a' â†’ ans="a"
       index=1 â†’ char='b'
           - Include 'b' â†’ ans="ab"
               index=2 â†’ char='c'
                   - Include 'c' â†’ ans="abc" â†’ print
                   - Exclude 'c' â†’ ans="ab"  â†’ print
           - Exclude 'b' â†’ ans="a"
               index=2 â†’ char='c'
                   - Include 'c' â†’ ans="ac" â†’ print
                   - Exclude 'c' â†’ ans="a"  â†’ print
   - Exclude 'a' â†’ ans=""
       index=1 â†’ char='b'
           - Include 'b' â†’ ans="b"
               index=2 â†’ char='c'
                   - Include 'c' â†’ ans="bc" â†’ print
                   - Exclude 'c' â†’ ans="b"  â†’ print
           - Exclude 'b' â†’ ans=""
               index=2 â†’ char='c'
                   - Include 'c' â†’ ans="c" â†’ print
                   - Exclude 'c' â†’ ans=""   â†’ print

âœ… Output (all subsets):
abc
ab
ac
a
bc
b
c
(empty subset)

---
ðŸ“Š Time Complexity:
   - Each character has 2 choices (include/exclude).
   - For n characters â†’ 2^n subsets.
   - Total complexity = O(2^n).

ðŸ“Š Space Complexity:
   - O(n) recursion depth (max stack calls).
   - O(n) for storing subset string at each recursion level.
*/
